#!/bin/bash

# Life Blog Server Controller
# Simple commands to start and stop your blog editor

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LIFE_EDITOR_DIR="$SCRIPT_DIR/life-editor"
PID_FILE="$LIFE_EDITOR_DIR/.server.pid"

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

start_server() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if kill -0 "$PID" 2>/dev/null; then
            echo -e "${YELLOW}Server is already running on http://localhost:3000${NC}"
            echo -e "${BLUE}PID: $PID${NC}"
            return 0
        else
            rm -f "$PID_FILE"
        fi
    fi

    echo -e "${GREEN}üöÄ Starting Life Blog Server...${NC}"
    
    # Check if we're in the right directory
    if [ ! -d "$LIFE_EDITOR_DIR" ]; then
        echo -e "${RED}‚ùå Error: life-editor directory not found${NC}"
        echo -e "${YELLOW}Please run this script from the directory containing 'life-editor'${NC}"
        exit 1
    fi

    # Check if dependencies are installed
    if [ ! -d "$LIFE_EDITOR_DIR/node_modules" ]; then
        echo -e "${YELLOW}üì¶ Installing dependencies...${NC}"
        cd "$LIFE_EDITOR_DIR" && npm install
        if [ $? -ne 0 ]; then
            echo -e "${RED}‚ùå Failed to install dependencies${NC}"
            exit 1
        fi
    fi

    # Start the server in background
    cd "$LIFE_EDITOR_DIR" && npm run dev > /dev/null 2>&1 &
    SERVER_PID=$!
    echo "$SERVER_PID" > "$PID_FILE"

    # Wait a moment for server to start
    sleep 3

    # Check if server is running
    if kill -0 "$SERVER_PID" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Server started successfully!${NC}"
        echo -e "${BLUE}üåê Open in browser: http://localhost:3000${NC}"
        echo -e "${BLUE}üîß PID: $SERVER_PID${NC}"
        echo ""
        echo -e "${YELLOW}üí° Quick links:${NC}"
        echo -e "   Editor:  http://localhost:3000/editor"
        echo -e "   Viewer:  http://localhost:3000/viewer"
        echo ""
        echo -e "${YELLOW}To stop the server, run: $0 stop${NC}"
    else
        echo -e "${RED}‚ùå Failed to start server${NC}"
        rm -f "$PID_FILE"
        exit 1
    fi
}

stop_server() {
    if [ ! -f "$PID_FILE" ]; then
        echo -e "${YELLOW}Server is not running${NC}"
        return 0
    fi

    PID=$(cat "$PID_FILE")
    if kill -0 "$PID" 2>/dev/null; then
        echo -e "${YELLOW}üõë Stopping Life Blog Server...${NC}"
        
        # Kill the process tree
        pkill -P "$PID" 2>/dev/null
        kill "$PID" 2>/dev/null
        
        # Wait for process to terminate
        sleep 2
        
        if kill -0 "$PID" 2>/dev/null; then
            echo -e "${YELLOW}Force killing process...${NC}"
            kill -9 "$PID" 2>/dev/null
        fi
        
        rm -f "$PID_FILE"
        echo -e "${GREEN}‚úÖ Server stopped successfully${NC}"
    else
        echo -e "${YELLOW}Server was not running (cleaning up PID file)${NC}"
        rm -f "$PID_FILE"
    fi
}

status_server() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if kill -0 "$PID" 2>/dev/null; then
            echo -e "${GREEN}‚úÖ Server is running${NC}"
            echo -e "${BLUE}üåê URL: http://localhost:3000${NC}"
            echo -e "${BLUE}üîß PID: $PID${NC}"
            
            # Try to get port info
            if command -v lsof >/dev/null 2>&1; then
                PORT_INFO=$(lsof -i :3000 2>/dev/null | grep LISTEN)
                if [ ! -z "$PORT_INFO" ]; then
                    echo -e "${BLUE}üì° Port: 3000 (LISTENING)${NC}"
                fi
            fi
        else
            echo -e "${RED}‚ùå Server is not running (stale PID file)${NC}"
            rm -f "$PID_FILE"
        fi
    else
        echo -e "${YELLOW}Server is not running${NC}"
    fi
}

show_help() {
    echo -e "${BLUE}Life Blog Server Controller${NC}"
    echo ""
    echo -e "${YELLOW}Usage:${NC}"
    echo -e "  $0 start    - Start the blog server"
    echo -e "  $0 stop     - Stop the blog server"
    echo -e "  $0 restart  - Restart the blog server"
    echo -e "  $0 status   - Check server status"
    echo -e "  $0 help     - Show this help"
    echo ""
    echo -e "${YELLOW}Quick Commands:${NC}"
    echo -e "  $0          - Start server (default)"
    echo -e "  $0 s        - Start server"
    echo -e "  $0 x        - Stop server"
    echo ""
    echo -e "${YELLOW}Examples:${NC}"
    echo -e "  $0 start    # Start the server"
    echo -e "  $0 stop     # Stop the server"
    echo -e "  $0 status   # Check if running"
    echo ""
    echo -e "${GREEN}Once started, access your blog at:${NC}"
    echo -e "  üè† Home:    http://localhost:3000"
    echo -e "  ‚úçÔ∏è  Editor:  http://localhost:3000/editor"
    echo -e "  üìö Viewer:  http://localhost:3000/viewer"
}

# Main script logic
case "${1:-start}" in
    "start"|"s"|"")
        start_server
        ;;
    "stop"|"x")
        stop_server
        ;;
    "restart"|"r")
        stop_server
        sleep 1
        start_server
        ;;
    "status"|"st")
        status_server
        ;;
    "help"|"h"|"-h"|"--help")
        show_help
        ;;
    *)
        echo -e "${RED}Unknown command: $1${NC}"
        echo ""
        show_help
        exit 1
        ;;
esac